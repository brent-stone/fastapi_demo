services:
  api:
    # This starts GUnicorn with live-reload
    command: /fastapi_demo/backend/start-reload.sh
    container_name: demo-api-dev
    image: demo-api-dev
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    volumes:
      # We can't just mount everything because start and pre-start permissions will be
      # denied.
      # "Top Level" /fastapi_demo mounting
      - ./.git:/fastapi_demo/.git
      - ./.gitignore:/fastapi_demo/.gitignore
#      - ./.idea:/fastapi_demo/.idea
      - ./initialize_env_and_cert.sh:/fastapi_demo/initialize_env_and_cert.sh
#      - ./frontend:/fastapi_demo/frontend
      - ./postgres:/fastapi_demo/postgres
      # /backend folder mounting
      - ./backend/alembic:/fastapi_demo/backend/alembic
      - ./backend/demo:/fastapi_demo/backend/demo
      - ./backend/stubs:/fastapi_demo/backend/stubs
      - ./backend/tests:/fastapi_demo/backend/tests
      # /backend file mounting
      - ./backend/.coveragerc:/fastapi_demo/backend/.coveragerc
      - ./backend/.flake8:/fastapi_demo/backend/.flake8
      - ./backend/.pre-commit-config.yaml:/fastapi_demo/backend/.pre-commit-config.yaml
      - ./backend/alembic.ini:/fastapi_demo/backend/alembic.ini
      - ./backend/gunicorn_conf.py:/fastapi_demo/backend/gunicorn_conf.py
      - ./backend/mypy.ini:/fastapi_demo/backend/mypy.ini
      - ./backend/pyproject.toml:/fastapi_demo/backend/pyproject.toml
      - ./backend/tox.ini:/fastapi_demo/backend/tox.ini
    environment:
      # Enable Python interpreter specific development settings
      PYTHONUNBUFFERED: 0
      PYTHONWARNINGS: always
      #  PYTHONDEVMODE: 1
      # FastAPI SQLAlchemy 2.0 Migration specific warning flag
      # remove once SQLAlchemy is officially updated to 2.0
      SQLALCHEMY_WARN_20: "${SQLALCHEMY_WARN_20:?missing .env file with SQLALCHEMY_WARN_20}"

  adminer:
    image: adminer
    container_name: demo-adminer
    restart: always
    ports:
      - target: 8080
        published: "${ADMINER_PORT:?missing .env file with ADMINER_PORT}"
        mode: host
    depends_on:
      db:
        condition: service_healthy
